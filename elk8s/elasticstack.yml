apiVersion: v1
namespace: logging
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: elasticsvc-rest
  spec:
    selector:
      appType: "infra-logging"
      appName: "elasticstack"
      app: "elasticsearch"
    ports:
    - protocol: TCP
      port: 9292
      targetPort: 9200
#- apiVersion: v1
#  kind: Service
#  # Not needed because there is only one elasticsearch node in this config
#  metadata:
#    name: elasticsvc-comm
#  spec:
#    selector:
#      appType: "infra-logging"
#      appName: "elasticstack"
#      app: "elasticsearch"
#    ports:
#    - protocol: TCP
#      port: 9393
#      targetPort: 9300
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      appType: "infra-logging"
      appName: "elasticstack"
      app: "elasticsearch"
    name: "elasticsearch"
  spec:
    replicas: 1
    selector:
      matchLabels:
        appType: "infra-logging"
        appName: "elasticstack"
        app: "elasticsearch"
    template:
      metadata:
        labels:
          appType: "infra-logging"
          appName: "elasticstack"
          app: "elasticsearch"
      spec:
        containers:
        - name: "elasticsearch"
          image: docker.elastic.co/elasticsearch/elasticsearch:6.4.0
          imagePullPolicy: IfNotPresent
          #command: ["/bin/elasticsearch", "-d"]
          ports:
          # Don't need 9200 and 9300, but I'm lazy
          # fancy feature from:
          # https://kubernetes.io/docs/concepts/services-networking/service/
          - name: es-rest
            containerPort: 9200
          - name: es-comm
            containerPort: 9300
        restartPolicy: Always
#- apiVersion: apps/v1
#  kind: Deployment
#  metadata:
#    labels:
#      appType: "infra-logging"
#      appName: "elasticstack"
#    name: "logstash"
#  spec:
#    replicas: 1
#    selector:
#      matchLabels:
#        appType: "infra-logging"
#        appName: "elasticstack"
#        app: "logstash"
#    template:
#      metadata:
#        labels:
#          appType: "infra-logging"
#          appName: "elasticstack"
#          app: "logstash"
#      spec:
#        containers:
#        - name: "logstash"
#          image: docker.elastic.co/logstash/logstash:6.4.0
#          imagePullPolicy: IfNotPresent
#        restartPolicy: Always
#- apiVersion: v1
#  kind: ConfigMap
#  # Gives kibana the configuration to address elasticsearch
- apiVersion: apps/v1
  kind: Deployment
  # add a runtime variable to kibana that specifies the service path
  metadata:
    labels:
      appType: "infra-logging"
      appName: "elasticstack"
    name: "kibana"
  spec:
    replicas: 1
    selector:
      matchLabels:
        appType: "infra-logging"
        appName: "elasticstack"
        app: "kibana"
    template:
      metadata:
        labels:
          appType: "infra-logging"
          appName: "elasticstack"
          app: "kibana"
      spec:
        containers:
        - name: "kibana"
          image: docker.elastic.co/kibana/kibana:6.4.0
          imagePullPolicy: IfNotPresent
          env:
          - name: ELASTICSEARCH_URL
            # Fancy shorthand based on named svc's
            value: "http://elasticsvc-rest:9292"
          ports:
          - containerPort: 5601
        restartPolicy: Always
- apiVersion: v1
  kind: Service
  metadata:
    name: elastic-frontend
  spec:
    selector:
      appType: "infra-logging"
      appName: "elasticstack"
      app: "kibana"
    ports:
    - protocol: TCP
      port: 5601
    type: NodePort
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
